// "Details_Output_Small.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "Details_Output_Small.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _Details_Output_Small_version_
const char Details_Output_Small_version[4] = { '0','1','9','d' };
#define _Details_Output_Small_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _Details_Output_Small_vertexcount_
const unsigned Details_Output_Small_vertexcount = 196;
#define _Details_Output_Small_vertexcount_
#endif
#ifndef _Details_Output_Small_indexcount_
const unsigned Details_Output_Small_indexcount = 474;
#define _Details_Output_Small_indexcount_
#endif
#ifndef _Details_Output_Small_materialcount_
const unsigned Details_Output_Small_materialcount = 1; // can be used for batched draws
#define _Details_Output_Small_materialcount_
#endif
#ifndef _Details_Output_Small_meshcount_
const unsigned Details_Output_Small_meshcount = 1;
#define _Details_Output_Small_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _Details_Output_Small_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT Details_Output_Small_vertices[196] =
{
	{	{ 0.064955f, -0.064956f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.079195f, -0.040827f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.065499f, -0.027131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.050131f, -0.050131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.040827f, -0.079195f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.027131f, -0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.078653f, 0.040285f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.064369f, 0.064369f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.050130f, 0.050130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.065499f, 0.027130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.064369f, -0.064369f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.040285f, -0.078654f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.027131f, -0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.050131f, -0.050131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.040827f, 0.079195f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.064956f, 0.064955f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.050131f, 0.050130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.027131f, 0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.079195f, 0.040827f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.065499f, 0.027130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.040285f, 0.078653f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.027131f, 0.065498f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.078654f, -0.040285f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.065499f, -0.027131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.018618f, 0.018618f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.675000f, -0.675000f, -0.298000f }	},
	{	{ -0.024326f, 0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.881900f, -0.365300f, -0.298000f }	},
	{	{ -0.036699f, 0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.881900f, -0.365300f, -0.298000f }	},
	{	{ -0.028088f, 0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.675000f, -0.675000f, -0.298000f }	},
	{	{ -0.026330f, -0.000000f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.954600f, 0.000000f, -0.298000f }	},
	{	{ -0.039723f, -0.000000f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.954600f, 0.000000f, -0.298000f }	},
	{	{ -0.024326f, -0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.881900f, 0.365300f, -0.298000f }	},
	{	{ -0.036699f, -0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.881900f, 0.365300f, -0.298000f }	},
	{	{ -0.018618f, -0.018619f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.675000f, 0.675000f, -0.298000f }	},
	{	{ -0.028088f, -0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.675000f, 0.675000f, -0.298000f }	},
	{	{ -0.010076f, -0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.365300f, 0.881900f, -0.298000f }	},
	{	{ -0.015201f, -0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.365300f, 0.881900f, -0.298000f }	},
	{	{ 0.000000f, -0.026330f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.954600f, -0.298000f }	},
	{	{ 0.000000f, -0.039723f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, 0.954600f, -0.298000f }	},
	{	{ 0.010076f, -0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.365300f, 0.881900f, -0.298000f }	},
	{	{ 0.015201f, -0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.365300f, 0.881900f, -0.298000f }	},
	{	{ 0.018618f, -0.018619f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.675000f, 0.675000f, -0.298000f }	},
	{	{ 0.028088f, -0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.675000f, 0.675000f, -0.298000f }	},
	{	{ 0.024326f, -0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.881900f, 0.365300f, -0.298000f }	},
	{	{ 0.036699f, -0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.881900f, 0.365300f, -0.298000f }	},
	{	{ 0.026330f, -0.000000f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.954600f, 0.000000f, -0.298000f }	},
	{	{ 0.039723f, -0.000000f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.954600f, 0.000000f, -0.298000f }	},
	{	{ 0.024326f, 0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.881900f, -0.365300f, -0.298000f }	},
	{	{ 0.036699f, 0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.881900f, -0.365300f, -0.298000f }	},
	{	{ 0.018618f, 0.018618f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.675000f, -0.675000f, -0.298000f }	},
	{	{ 0.028088f, 0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.675000f, -0.675000f, -0.298000f }	},
	{	{ 0.010076f, 0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.365300f, -0.881900f, -0.298000f }	},
	{	{ 0.015201f, 0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.365300f, -0.881900f, -0.298000f }	},
	{	{ 0.000000f, 0.026330f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.954600f, -0.298000f }	},
	{	{ 0.000000f, 0.039723f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.954600f, -0.298000f }	},
	{	{ -0.018618f, 0.018618f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.010076f, 0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.000000f, 0.026330f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.024326f, 0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.010076f, 0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.026330f, -0.000000f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.024326f, -0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.018618f, 0.018618f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.024326f, 0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.018618f, -0.018619f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.010076f, -0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.000000f, -0.026330f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.010076f, -0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.018618f, -0.018619f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.024326f, -0.010076f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.026330f, -0.000000f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.010076f, 0.024326f, 0.017397f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.365300f, -0.881900f, -0.298000f }	},
	{	{ -0.015201f, 0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.365300f, -0.881900f, -0.298000f }	},
	{	{ 0.000000f, -0.039723f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.085800f, -0.996300f }	},
	{	{ 0.000000f, -0.056913f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.085800f, -0.996300f }	},
	{	{ -0.021780f, -0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021900f, -0.052900f, -0.998400f }	},
	{	{ -0.015201f, -0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.032800f, -0.079300f, -0.996300f }	},
	{	{ 0.036699f, 0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.079300f, 0.032800f, -0.996300f }	},
	{	{ 0.052580f, 0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.052900f, 0.021900f, -0.998400f }	},
	{	{ 0.056912f, -0.000000f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.085800f, -0.000000f, -0.996300f }	},
	{	{ 0.039723f, -0.000000f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.085800f, -0.000000f, -0.996300f }	},
	{	{ -0.028088f, 0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.060700f, 0.060700f, -0.996300f }	},
	{	{ -0.040243f, 0.040243f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.026600f, 0.026600f, -0.999300f }	},
	{	{ -0.021780f, 0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.021900f, 0.052900f, -0.998400f }	},
	{	{ -0.015201f, 0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.032800f, 0.079300f, -0.996300f }	},
	{	{ -0.028088f, -0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.060700f, -0.060700f, -0.996300f }	},
	{	{ -0.040243f, -0.040243f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.026600f, -0.026600f, -0.999300f }	},
	{	{ -0.052580f, -0.021780f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.052900f, -0.021900f, -0.998400f }	},
	{	{ -0.036699f, -0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.079300f, -0.032800f, -0.996300f }	},
	{	{ 0.036699f, -0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.079300f, -0.032800f, -0.996300f }	},
	{	{ 0.052580f, -0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.052900f, -0.021900f, -0.998400f }	},
	{	{ 0.040243f, -0.040243f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.026600f, -0.026600f, -0.999300f }	},
	{	{ 0.028088f, -0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.060700f, -0.060700f, -0.996300f }	},
	{	{ 0.000000f, 0.039723f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.085800f, -0.996300f }	},
	{	{ -0.000000f, 0.056913f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.085800f, -0.996300f }	},
	{	{ 0.021779f, 0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021900f, 0.052900f, -0.998400f }	},
	{	{ 0.015201f, 0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.032800f, 0.079300f, -0.996300f }	},
	{	{ -0.039723f, -0.000000f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.085800f, -0.000000f, -0.996300f }	},
	{	{ -0.056913f, -0.000000f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.085800f, -0.000000f, -0.996300f }	},
	{	{ -0.052580f, 0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.052900f, 0.021900f, -0.998400f }	},
	{	{ -0.036699f, 0.015201f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.079300f, 0.032800f, -0.996300f }	},
	{	{ 0.015201f, -0.036699f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.032800f, -0.079300f, -0.996300f }	},
	{	{ 0.021779f, -0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.021900f, -0.052900f, -0.998400f }	},
	{	{ 0.028088f, 0.028088f, -0.025504f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.060700f, 0.060700f, -0.996300f }	},
	{	{ 0.040243f, 0.040243f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.026600f, 0.026600f, -0.999300f }	},
	{	{ -0.051673f, -0.051674f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.063140f, -0.032340f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.000000f, -0.070896f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.966500f, -0.256600f }	},
	{	{ -0.027131f, -0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, -0.949100f, -0.251900f }	},
	{	{ -0.021780f, -0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, -0.949100f, -0.251900f }	},
	{	{ 0.000000f, -0.056913f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.000000f, -0.966500f, -0.256600f }	},
	{	{ -0.000000f, 0.070895f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.966500f, -0.256600f }	},
	{	{ 0.027131f, 0.065498f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.188800f, 0.949100f, -0.251900f }	},
	{	{ 0.021779f, 0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.188800f, 0.949100f, -0.251900f }	},
	{	{ -0.000000f, 0.056913f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, 0.966500f, -0.256600f }	},
	{	{ 0.027131f, -0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.188800f, -0.949100f, -0.251900f }	},
	{	{ 0.021779f, -0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.188800f, -0.949100f, -0.251900f }	},
	{	{ -0.027131f, 0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, 0.949100f, -0.251900f }	},
	{	{ -0.021780f, 0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.188800f, 0.949100f, -0.251900f }	},
	{	{ 0.032775f, -0.063576f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.040827f, -0.079195f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.027131f, -0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.021779f, -0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.079195f, 0.040827f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.063575f, 0.032774f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.052580f, 0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.065499f, 0.027130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.070896f, -0.000000f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966500f, 0.000000f, -0.256600f }	},
	{	{ -0.065499f, 0.027130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.949100f, 0.188800f, -0.251900f }	},
	{	{ -0.052580f, 0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.949100f, 0.188800f, -0.251900f }	},
	{	{ -0.056913f, -0.000000f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.966500f, 0.000000f, -0.256600f }	},
	{	{ 0.070895f, -0.000000f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966500f, -0.000000f, -0.256600f }	},
	{	{ 0.065499f, -0.027131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.949100f, -0.188800f, -0.251900f }	},
	{	{ 0.052580f, -0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.949100f, -0.188800f, -0.251900f }	},
	{	{ 0.056912f, -0.000000f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.966500f, -0.000000f, -0.256600f }	},
	{	{ -0.065499f, -0.027131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.949100f, -0.188800f, -0.251900f }	},
	{	{ -0.052580f, -0.021780f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.949100f, -0.188800f, -0.251900f }	},
	{	{ 0.065499f, 0.027130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.949100f, 0.188800f, -0.251900f }	},
	{	{ 0.052580f, 0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.949100f, 0.188800f, -0.251900f }	},
	{	{ 0.032339f, 0.063140f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.051673f, 0.051673f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.064955f, -0.064956f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.668700f, -0.668700f, -0.325200f }	},
	{	{ 0.040827f, -0.079195f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.482200f, -0.817100f, -0.316000f }	},
	{	{ 0.032775f, -0.063576f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.482200f, -0.817100f, -0.316000f }	},
	{	{ 0.052144f, -0.052144f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.668700f, -0.668700f, -0.325200f }	},
	{	{ -0.079195f, 0.040827f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.817100f, 0.482200f, -0.316000f }	},
	{	{ -0.064956f, 0.064955f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.668700f, 0.668700f, -0.325200f }	},
	{	{ -0.052145f, 0.052144f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.668700f, 0.668700f, -0.325200f }	},
	{	{ -0.063575f, 0.032774f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.817100f, 0.482200f, -0.316000f }	},
	{	{ -0.040827f, 0.079195f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.482200f, 0.817100f, -0.316000f }	},
	{	{ -0.032775f, 0.063575f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.482200f, 0.817100f, -0.316000f }	},
	{	{ 0.079195f, -0.040827f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.817100f, -0.482200f, -0.316000f }	},
	{	{ 0.063576f, -0.032775f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.817100f, -0.482200f, -0.316000f }	},
	{	{ -0.032775f, 0.063575f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.040827f, 0.079195f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.027131f, 0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.021780f, 0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.063575f, 0.032774f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.052145f, 0.052144f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.079195f, -0.040827f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.063576f, -0.032775f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.052580f, -0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.065499f, -0.027131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.052144f, -0.052144f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.032775f, -0.063576f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.063576f, -0.032775f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ -0.032775f, 0.063575f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.040285f, 0.078653f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.484400f, 0.816700f, -0.313600f }	},
	{	{ 0.064369f, 0.064369f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.669300f, 0.669300f, -0.322600f }	},
	{	{ 0.051673f, 0.051673f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.669300f, 0.669300f, -0.322600f }	},
	{	{ 0.032339f, 0.063140f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.484400f, 0.816700f, -0.313600f }	},
	{	{ -0.064369f, -0.064369f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.669300f, -0.669300f, -0.322600f }	},
	{	{ -0.078654f, -0.040285f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.816700f, -0.484400f, -0.313600f }	},
	{	{ -0.063140f, -0.032340f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.816700f, -0.484400f, -0.313600f }	},
	{	{ -0.051673f, -0.051674f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.669300f, -0.669300f, -0.322600f }	},
	{	{ 0.078653f, 0.040285f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.816700f, 0.484400f, -0.313600f }	},
	{	{ 0.063141f, 0.032339f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.816700f, 0.484400f, -0.313600f }	},
	{	{ -0.040285f, -0.078654f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.484400f, -0.816700f, -0.313600f }	},
	{	{ -0.032339f, -0.063141f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.484400f, -0.816700f, -0.313600f }	},
	{	{ -0.063140f, -0.032340f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.078654f, -0.040285f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.065499f, -0.027131f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.052580f, -0.021780f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.040285f, -0.078654f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.032339f, -0.063141f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.021780f, -0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ -0.027131f, -0.065499f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.040285f, 0.078653f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.032339f, 0.063140f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.021779f, 0.052580f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ 0.027131f, 0.065498f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ -0.703500f, 0.703500f, -0.101100f }	},
	{	{ -0.032339f, -0.063141f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
	{	{ 0.063141f, 0.032339f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.078653f, 0.040285f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.065499f, 0.027130f, 0.028655f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.052580f, 0.021779f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.703500f, -0.703500f, -0.101100f }	},
	{	{ 0.063141f, 0.032339f, -0.024024f },	{ 0.000000f, 0.000000f, 0.000000f },	{ 0.000000f, -0.000000f, -1.000000f }	},
};
#define _Details_Output_Small_vertices_
#endif
#ifndef _Details_Output_Small_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int Details_Output_Small_indices[474] =
{
	 0, 1, 2,
	 3, 0, 2,
	 4, 0, 3,
	 5, 4, 3,
	 6, 7, 8,
	 9, 6, 8,
	 10, 11, 12,
	 13, 10, 12,
	 14, 15, 16,
	 17, 14, 16,
	 15, 18, 19,
	 16, 15, 19,
	 7, 20, 21,
	 8, 7, 21,
	 22, 10, 13,
	 23, 22, 13,
	 24, 25, 26,
	 27, 24, 26,
	 25, 28, 29,
	 26, 25, 29,
	 28, 30, 31,
	 29, 28, 31,
	 30, 32, 33,
	 31, 30, 33,
	 32, 34, 35,
	 33, 32, 35,
	 34, 36, 37,
	 35, 34, 37,
	 36, 38, 39,
	 37, 36, 39,
	 38, 40, 41,
	 39, 38, 41,
	 40, 42, 43,
	 41, 40, 43,
	 42, 44, 45,
	 43, 42, 45,
	 44, 46, 47,
	 45, 44, 47,
	 46, 48, 49,
	 47, 46, 49,
	 48, 50, 51,
	 49, 48, 51,
	 50, 52, 53,
	 51, 50, 53,
	 54, 55, 56,
	 57, 54, 56,
	 57, 56, 58,
	 59, 57, 58,
	 60, 59, 58,
	 58, 61, 62,
	 60, 58, 62,
	 63, 60, 62,
	 64, 63, 62,
	 65, 64, 62,
	 66, 65, 62,
	 67, 66, 62,
	 68, 67, 62,
	 69, 68, 62,
	 52, 70, 71,
	 53, 52, 71,
	 70, 24, 27,
	 71, 70, 27,
	 72, 73, 74,
	 75, 72, 74,
	 76, 77, 78,
	 79, 76, 78,
	 80, 81, 82,
	 83, 80, 82,
	 84, 85, 86,
	 87, 84, 86,
	 88, 89, 90,
	 91, 88, 90,
	 92, 93, 94,
	 95, 92, 94,
	 96, 97, 98,
	 99, 96, 98,
	 100, 101, 73,
	 72, 100, 73,
	 102, 103, 77,
	 76, 102, 77,
	 75, 74, 85,
	 84, 75, 85,
	 79, 78, 89,
	 88, 79, 89,
	 83, 82, 93,
	 92, 83, 93,
	 87, 86, 97,
	 96, 87, 97,
	 91, 90, 101,
	 100, 91, 101,
	 99, 98, 81,
	 80, 99, 81,
	 95, 94, 103,
	 102, 95, 103,
	 104, 105, 86,
	 85, 104, 86,
	 106, 107, 108,
	 109, 106, 108,
	 110, 111, 112,
	 113, 110, 112,
	 114, 106, 109,
	 115, 114, 109,
	 116, 110, 113,
	 117, 116, 113,
	 118, 119, 120,
	 121, 118, 120,
	 122, 123, 124,
	 125, 122, 124,
	 126, 127, 128,
	 129, 126, 128,
	 130, 131, 132,
	 133, 130, 132,
	 134, 126, 129,
	 135, 134, 129,
	 136, 130, 133,
	 137, 136, 133,
	 138, 139, 103,
	 94, 138, 103,
	 140, 141, 142,
	 143, 140, 142,
	 144, 145, 146,
	 147, 144, 146,
	 145, 148, 149,
	 146, 145, 149,
	 150, 140, 143,
	 151, 150, 143,
	 152, 153, 154,
	 155, 152, 154,
	 156, 157, 81,
	 98, 156, 81,
	 158, 159, 160,
	 161, 158, 160,
	 162, 163, 101,
	 90, 162, 101,
	 164, 162, 90,
	 89, 164, 90,
	 157, 165, 82,
	 81, 157, 82,
	 166, 167, 168,
	 169, 166, 168,
	 170, 171, 172,
	 173, 170, 172,
	 167, 174, 175,
	 168, 167, 175,
	 176, 170, 173,
	 177, 176, 173,
	 178, 179, 180,
	 181, 178, 180,
	 182, 183, 184,
	 185, 182, 184,
	 186, 187, 188,
	 189, 186, 188,
	 190, 104, 85,
	 74, 190, 85,
	 191, 192, 193,
	 194, 191, 193,
	 139, 195, 77,
	 103, 139, 77,
};
#define _Details_Output_Small_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _Details_Output_Small_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL Details_Output_Small_materials[1] =
{
	{
		{{ 0.191638f, 0.191638f, 0.191638f },
		1.000000f,
		{ 0.500000f, 0.500000f, 0.500000f },
		96.078430f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.000000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"DarkGrey",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _Details_Output_Small_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _Details_Output_Small_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int Details_Output_Small_batches[1][2] =
{
	{ 474, 0 },
};
#define _Details_Output_Small_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _Details_Output_Small_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH Details_Output_Small_meshes[1] =
{
	{
		"default",
		474,
		0,
		0,
	},
};
#define _Details_Output_Small_meshes_
#endif
